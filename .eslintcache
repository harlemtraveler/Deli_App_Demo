[{"/home/robot/Git/Projects/Deli_App/deli-app/src/index.js":"1","/home/robot/Git/Projects/Deli_App/deli-app/src/App.js":"2","/home/robot/Git/Projects/Deli_App/deli-app/src/reportWebVitals.js":"3","/home/robot/Git/Projects/Deli_App/deli-app/src/aws-exports.js":"4","/home/robot/Git/Projects/Deli_App/deli-app/src/serviceWorker.js":"5","/home/robot/Git/Projects/Deli_App/deli-app/src/pages/HomePage.js":"6","/home/robot/Git/Projects/Deli_App/deli-app/src/components/layout/Main.js":"7","/home/robot/Git/Projects/Deli_App/deli-app/src/components/layout/AppbarMenu.js":"8","/home/robot/Git/Projects/Deli_App/deli-app/src/components/layout/DrawerMenu.js":"9","/home/robot/Git/Projects/Deli_App/deli-app/src/utils/index.js":"10","/home/robot/Git/Projects/Deli_App/deli-app/src/components/forms/FormCard.js":"11","/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/FancyCheckout.js":"12","/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/Review.js":"13","/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/PaymentForm.js":"14","/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/AddressForm.js":"15","/home/robot/Git/Projects/Deli_App/deli-app/src/components/product_components/NewProduct.js":"16","/home/robot/Git/Projects/Deli_App/deli-app/src/graphql/mutations.js":"17","/home/robot/Git/Projects/Deli_App/deli-app/src/components/product_components/ProductList.js":"18","/home/robot/Git/Projects/Deli_App/deli-app/src/components/Error.js":"19","/home/robot/Git/Projects/Deli_App/deli-app/src/components/product_components/Product.js":"20","/home/robot/Git/Projects/Deli_App/deli-app/src/config/index.js":"21","/home/robot/Git/Projects/Deli_App/deli-app/src/graphql/queries.js":"22","/home/robot/Git/Projects/Deli_App/deli-app/src/components/Checkout.js":"23","/home/robot/Git/Projects/Deli_App/deli-app/src/utils/emailHandler.js":"24"},{"size":388,"mtime":1608499138075,"results":"25","hashOfConfig":"26"},{"size":6737,"mtime":1610258579059,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1608420109785,"results":"28","hashOfConfig":"26"},{"size":1041,"mtime":1610235861203,"results":"29","hashOfConfig":"26"},{"size":5086,"mtime":1608499293484,"results":"30","hashOfConfig":"26"},{"size":761,"mtime":1610308711991,"results":"31","hashOfConfig":"26"},{"size":3920,"mtime":1610238471121,"results":"32","hashOfConfig":"26"},{"size":2736,"mtime":1608926853651,"results":"33","hashOfConfig":"26"},{"size":4339,"mtime":1608583579847,"results":"34","hashOfConfig":"26"},{"size":3396,"mtime":1610240010188,"results":"35","hashOfConfig":"26"},{"size":7799,"mtime":1610238584090,"results":"36","hashOfConfig":"26"},{"size":4470,"mtime":1604199408328,"results":"37","hashOfConfig":"26"},{"size":2927,"mtime":1604199031623,"results":"38","hashOfConfig":"26"},{"size":1559,"mtime":1604198970462,"results":"39","hashOfConfig":"26"},{"size":2667,"mtime":1604216942987,"results":"40","hashOfConfig":"26"},{"size":11152,"mtime":1610238547199,"results":"41","hashOfConfig":"26"},{"size":10190,"mtime":1610227833933,"results":"42","hashOfConfig":"26"},{"size":2351,"mtime":1609974706673,"results":"43","hashOfConfig":"26"},{"size":199,"mtime":1608670598352,"results":"44","hashOfConfig":"26"},{"size":15878,"mtime":1610314911833,"results":"45","hashOfConfig":"26"},{"size":867,"mtime":1610136562001,"results":"46","hashOfConfig":"26"},{"size":7038,"mtime":1610227833777,"results":"47","hashOfConfig":"26"},{"size":10687,"mtime":1610314966698,"results":"48","hashOfConfig":"26"},{"size":108,"mtime":1610250266184,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1qjws5a",{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},"/home/robot/Git/Projects/Deli_App/deli-app/src/index.js",[],["109","110"],"/home/robot/Git/Projects/Deli_App/deli-app/src/App.js",["111","112","113","114","115","116","117","118","119","120","121"],"import React, { Component } from 'react';\nimport './App.css';\nimport clsx from \"clsx\";\nimport {API, Auth, graphqlOperation, Hub} from \"aws-amplify\";\nimport { Router, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Authenticator, AmplifyTheme, withAuthenticator } from \"aws-amplify-react\";\n//** MaterialUI Imports **//\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withTheme, withStyles } from \"@material-ui/core/styles\";\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\n// Stripe imports\nimport { loadStripe } from \"@stripe/stripe-js/pure\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n// Font Imports\nimport \"fontsource-merriweather\";\nimport \"fontsource-libre-franklin\";\n//** Page Imports **//\nimport HomePage from \"./pages/HomePage\";\n//** Component Imports **//\nimport AppbarMenu from \"./components/layout/AppbarMenu\";\nimport DrawerMenu from \"./components/layout/DrawerMenu\";\nimport FormCard from \"./components/forms/FormCard\";\n// ENV Imports\nimport config from './config';\n//** Util Imports **//\nimport { handleSignIn, handleSignOut, stringToBoolean } from \"./utils\";\n\nexport const history = createBrowserHistory();\nconst stripePromise = loadStripe(config.stripeConfig.pubKey);\nexport const UserContext = React.createContext();\n\nclass App extends Component {\n  state ={\n    user: null,\n    menuOpen: false,\n    expanded: false,\n    testProduct: {}\n  };\n\n  componentDidMount() {\n    this.getUserData();\n    this.setAuthListener();\n  }\n\n  getUserData = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    user\n      ? this.setState({ user })\n      : this.setState({ user: null });\n    console.log(this.state.user);\n  };\n\n  setAuthListener = async () => {\n    Hub.listen('auth', (data) => {\n      switch (data.payload.event) {\n        case 'signIn':\n          console.log('[!] User signed in.');\n          this.getUserData();\n          break;\n        case 'signOut':\n          console.log('[!] User signed out.');\n          break;\n        default:\n          return;\n      }\n    });\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const { user, menuOpen } = this.state;\n    const { classes } = this.props;\n\n    return !user ? (\n      <Authenticator theme={theme} />\n    ) : (\n      <Elements stripe={stripePromise}>\n        <UserContext.Provider value={{ user }}>\n          <Router history={history}>\n            <>\n              <ThemeProvider theme={themeFont}>\n                <CssBaseline />\n\n                {/* Appbar */}\n                <AppbarMenu\n                  user={user}\n                  open={menuOpen}\n                  classes={classes}\n                  title={\"Deli App\"}\n                  position={\"fixed\"}\n                  handleDrawerOpen={this.handleDrawerOpen}\n                  shiftClass={clsx(classes.appBar, {\n                    [classes.appBarShift]: menuOpen,\n                  })}\n                />\n\n                {/* Drawer */}\n                <DrawerMenu\n                  classes={classes}\n                  open={menuOpen}\n                  handleDrawerClose={this.handleDrawerClose}\n                />\n\n                {/* Page Main Body */}\n                <main\n                  className={clsx(classes.content, {\n                    [classes.contentShift]: menuOpen,\n                  })}\n                >\n                  <div className={classes.drawerHeader} />\n\n                  {/* Routes */}\n                  <div className={\"app-container\"}>\n                    <Route exact path={\"/\"} component={HomePage} />\n                    {/*<Route path={\"/profile\"} component={() => (*/}\n                    {/*//  TODO: add a Profile component*/}\n                    {/*)} />*/}\n                  </div>\n                </main>\n              </ThemeProvider>\n            </>\n          </Router>\n        </UserContext.Provider>\n      </Elements>\n    );\n  }\n}\n\nconst drawerWidth = 240;\n\nconst themeFont = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"merriweather\",\n    ]\n  },\n});\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  // palette: {\n  //   primary: {\n  //     main: '#344955',\n  //   },\n  //   secondary: '#f9aa33',\n  // },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    // marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    // zIndex: theme.zIndex.drawer + 1,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n});\n\nconst merriweather = createMuiTheme({\n  typography: {\n    fontFamily: \"Merriweather\"\n  }\n});\n\nconst libreFranklin = createMuiTheme({\n  typography: {\n    fontFamily: \"Libre Franklin\"\n  }\n});\n\nconst theme = {\n  ...AmplifyTheme,\n  button: {\n    ...AmplifyTheme.button,\n    backgroundColor: \"#f9aa33\"\n  },\n  formSection: {\n    ...AmplifyTheme.formSection,\n    padding: \"25px\"\n  },\n  formField: {\n    ...AmplifyTheme.formField,\n    padding: \"5px\"\n  },\n  sectionBody: {\n    ...AmplifyTheme.sectionBody,\n    padding: \"25px\"\n  },\n  sectionHeader: {\n    ...AmplifyTheme.sectionHeader,\n    backgroundColor: \"#344955\"\n  }\n};\n\nexport default withStyles(styles)(App);\n","/home/robot/Git/Projects/Deli_App/deli-app/src/reportWebVitals.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/aws-exports.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/serviceWorker.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/pages/HomePage.js",["122","123","124"],"import React from \"react\";\n// Material-UI Imports\nimport Grid from '@material-ui/core/Grid';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport { makeStyles } from \"@material-ui/core\";\n// Component Imports\nimport Main from \"../components/layout/Main\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function HomePage() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <main>\n        <h1>Deli App</h1>\n\n        <Grid container spacing={5} className={classes.mainGrid}>\n          <Main title={\"Main Content Component\"} />\n        </Grid>\n      </main>\n    </>\n  );\n}","/home/robot/Git/Projects/Deli_App/deli-app/src/components/layout/Main.js",["125"],"import React, { Component } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\n// MaterialUI Imports\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport NewProduct from \"../product_components/NewProduct\";\nimport ProductList from \"../product_components/ProductList\";\n\nconst searchProducts = /* GraphQL */ `\n  query SearchProducts(\n    $filter: SearchableProductFilterInput\n    $sort: SearchableProductSortInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    searchProducts(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        name\n        tags\n        description\n        store {\n          id\n          name\n          tags\n          owner\n          createdAt\n          updatedAt\n        }\n        file {\n          bucket\n          region\n          key\n        }\n        price\n        delivery\n        owner\n        createdAt\n        updatedAt\n      }\n      nextToken\n      total\n    }\n  }\n`;\n\nclass Main extends Component {\n  state = {\n    searchTerm: \"\",\n    searchResults: [],\n    isSearching: false\n  };\n\n  handleSearchChange = event => {\n    event.preventDefault();\n\n    const targetName = event.target.name;\n    const targetValue = event.target.value;\n    this.setState({\n      ...targetName,\n      [targetName]: targetValue\n    });\n  };\n\n  handleClearSearch = () => this.setState({ searchTerm: \"\", searchResults: [] });\n\n  handleSearch = async event => {\n    try {\n      event.preventDefault();\n\n      this.setState({ isSearching: true });\n      const result = await API.graphql(graphqlOperation(searchProducts, {\n        filter: {\n          or: [\n            { name: { match: this.state.searchTerm } },\n            { owner: { match: this.state.searchTerm } },\n            { tags: { match: this.state.searchTerm } }\n          ]\n        }\n      }));\n      console.log({ result });\n      this.setState({\n        searchResults: result.data.searchProducts.items,\n        isSearching: false\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  render() {\n    const { title } = this.props;\n\n    return (\n      <Grid item xs={12} md={12}>\n        <Typography variant={\"h6\"} gutterBottom>\n          {title}\n        </Typography>\n\n        <Divider />\n\n        <FormControl fullWidth>\n          <Input\n            id={\"menu-search\"}\n            name={\"searchTerm\"}\n            label={\"Search Menu Items\"}\n            value={this.state.searchTerm}\n            placeholder={\"Search Menu Items...\"}\n            onChange={this.handleSearchChange}\n            endAdornment={\n              <InputAdornment position={\"end\"}>\n                <IconButton color={\"inherit\"} onClick={this.handleClearSearch}>\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          <Button\n            variant={\"contained\"}\n            onClick={this.handleSearch}\n            loading={this.state.isSearching}\n          >\n            Search\n          </Button>\n        </FormControl>\n\n        <Divider />\n\n        <NewProduct\n          handleSearch={this.handleSearch}\n          searchTerm={this.state.searchTerm}\n          isSearching={this.state.isSearching}\n          handleClearSearch={this.handleClearSearch}\n          handleSearchChange={this.handleSearchChange}\n        />\n\n        <ProductList searchResults={this.state.searchResults} />\n      </Grid>\n    );\n  }\n}\n\nexport default Main;","/home/robot/Git/Projects/Deli_App/deli-app/src/components/layout/AppbarMenu.js",["126","127","128","129"],"import React from 'react';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport clsx from \"clsx\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { handleSignIn, handleSignOut } from \"../../utils\";\nimport {Link} from \"react-router-dom\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {Auth} from \"aws-amplify\";\nimport FormCard from \"../forms/FormCard\";\n\nexport default function AppbarMenu (props) {\n  const { classes, title, handleDrawerOpen, open, user, position, shiftClass } = props;\n\n  return (\n    <>\n      {/*<AppBar color={\"inherit\"} position={position} className={shiftClass} style={{ background: '#344955' }}>*/}\n      <AppBar color={\"inherit\"} position={position} className={shiftClass}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge={\"start\"}\n            color={\"inherit\"}\n            aria-label={\"menu\"}\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Button size={\"small\"}>Subscribe</Button>\n\n          <Typography\n            noWrap\n            to={\"/\"}\n            variant={\"h5\"}\n            align={\"center\"}\n            component={Link}\n            color={\"inherit\"}\n            className={classes.toolbarTitle}\n            style={{ textDecoration: \"none\" }}\n          >\n            {title}\n          </Typography>\n\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n\n          {/*{user ? (*/}\n          {/*  <Button*/}\n          {/*    size={\"small\"}*/}\n          {/*    variant={\"outlined\"}*/}\n          {/*    onClick={() => (*/}\n          {/*      <FormCard />*/}\n          {/*    )}*/}\n          {/*  >*/}\n          {/*    Sign Out*/}\n          {/*  </Button>*/}\n          {/*) : (*/}\n          {/*  <Button*/}\n          {/*    size={\"small\"}*/}\n          {/*    variant={\"outlined\"}*/}\n          {/*    onClick={() => (*/}\n          {/*      <FormCard />*/}\n          {/*    )}*/}\n          {/*  >*/}\n          {/*    Sign In*/}\n          {/*  </Button>*/}\n          {/*)}*/}\n          <Button\n            size={\"small\"}\n            variant={\"outlined\"}\n            onClick={() => {}}\n          >\n            {user ? \"Sign Out\" : \"Sign In\"}\n          </Button>\n\n          <IconButton to={\"/profile\"} component={Link}>\n            <AccountCircleIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}","/home/robot/Git/Projects/Deli_App/deli-app/src/components/layout/DrawerMenu.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/utils/index.js",["130","131","132"],"import React from \"react\";\nimport { Auth, API, graphqlOperation } from \"aws-amplify\";\nimport format from 'date-fns/format';\nimport parseISO from \"date-fns/parseISO\";\nimport { getUser } from \"../graphql/queries\";\n\nexport const convertDollarsToCents = price => (price * 100).toFixed(0);\n\nexport const convertCentsToDollars = price => (price / 100).toFixed(2);\n\nexport const formatDateToISO = date => parseISO(date);\n\nexport const formatProductDate = date => format(date, \"MMM do, yyyy\");\n\nexport const formatOrderDate = date => format(date, \"EEEE h:mm aaaa MMM do yyyy\");\n\n\n/********************\n * Handle Change   *\n ********************/\nexport const handleChange = event => {\n  event.preventDefault();\n  const targetName = event.target.name;\n  const targetValue = event.target.value;\n  this.setState({\n    ...targetName,\n    [targetName]: targetValue\n  });\n};\n\n/***************************\n * Get Current User Data   *\n ***************************/\nexport const getUserData = async () => {\n  try {\n    const user = await Auth.currentAuthenticatedUser();\n  } catch (err) {\n    console.error('error getting user data', err);\n  }\n};\n\n/********************\n * Handle Sign In   *\n ********************/\nexport const handleSignIn = async (username, password) => {\n  try {\n    const user = await Auth.signIn(username, password);\n  } catch (error) {\n    console.log('error signing in', error);\n  }\n};\n\n/*********************\n * Handle Sign Out   *\n *********************/\nexport const handleSignOut = async () => {\n  try {\n    await Auth.signOut(); // FOR GLOBAL SIGN-OUT: Auth.signOut({ global: true });\n  } catch (error) {\n    console.log('error signing out: ', error);\n  }\n};\n\n/*************************************************\n * Convert Array of Objects to a single Object   *\n *************************************************/\nexport const arrayToObject = async (arr, nameKey, valueKey) => {\n  function reducer(acc, cur) {\n    return {...acc, [cur.nameKey]: cur.valueKey};\n  };\n  const result = await arr.reduce(reducer, {});\n  console.log(result);\n  return result;\n};\n\n/*******************************\n * Convert String to Boolean   *\n *******************************/\nexport const stringToBoolean = stringy => {\n  switch (stringy.toLowerCase().trim()) {\n    case \"true\": case \"yes\": case \"1\":\n      return true;\n    case \"false\": case \"no\": case \"0\": case null:\n      return false;\n    default:\n      return Boolean(stringy);\n  }\n};\n\n/*********************\n * Get S3Image URL   *\n *********************/\n// export const getS3ImageUrl = async imgkey => {};\n\n/*****************************\n * Create Shipping Address   *\n *****************************/\nexport const createShippingAddress = async source => ({\n  name: source.shipping.name.name,\n  email: source.charge.billing_details.email,\n  line1: source.shipping.address.line1,\n  city: source.shipping.address.city,\n  address_state: source.shipping.address.state,\n  country: source.shipping.address.country,\n  address_zip: source.shipping.address.postal_code\n});\n\n/***********************\n * Get Owner's Email   *\n ***********************/\nexport const getOwnerEmail = async ownerId => {\n  try {\n    const input = { id: ownerId };\n    const result = await API.graphql(graphqlOperation(getUser, input));\n    return result.data.getUser.email;\n  } catch (err) {\n    console.error(`[!] Error fetching product owner's email ${ownerId}`, err);\n  }\n};","/home/robot/Git/Projects/Deli_App/deli-app/src/components/forms/FormCard.js",["133","134","135","136","137","138","139"],"import React, { useState, useEffect } from 'react';\nimport { Auth, Hub } from 'aws-amplify';\nimport clsx from 'clsx';\n//** MaterialUI Imports **//\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Dialog,\n  Button,\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nconst initialFormState = {\n  username: \"\", password: \"\", email: \"\", authCode: \"\", formType: \"signUp\"\n};\n\nexport default function FormCard () {\n  const [user, updateUser] = useState(null);\n  const [formState, updateFormState] = useState(initialFormState);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  useEffect(() => {\n    checkUser();\n    setAuthListener();\n  });\n\n  const checkUser = async () => {\n    try {\n      const result = await Auth.currentAuthenticatedUser();\n      updateUser(result);\n      updateFormState(() => ({ ...formState, formType: \"signedIn\" }));\n    } catch (err) {\n      // TODO: is the below line of code required for security?\n      // updateUser(null);\n      console.error(err);\n    }\n  };\n\n  const setAuthListener = async () => {\n    Hub.listen('auth', (data) => {\n      switch (data.payload.event) {\n        case 'signIn':\n          console.log('[+] User signed in.');\n          break;\n        case 'signOut':\n          updateFormState(() => ({ ...formState, formType: \"signedOut\" }));\n          break;\n        default:\n          return;\n      }\n    });\n  };\n\n  const onChange = e => {\n    e.persist();\n    updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }))\n  };\n\n  const { formType } = formState;\n\n  /************************************\n   * Amplify Auth Component Methods   *\n   ************************************/\n  const signUp = async () => {\n    const { username, email, password } = formState;\n    try {\n      await Auth.signUp({ username, password, attributes: { email } });\n      updateFormState(() => ({ ...formState, formType: \"confirmSignUp\" }));\n    } catch (err) {\n      console.error('[!] Error signing up.', err);\n    }\n  };\n\n  const confirmSignUp = async () => {\n    const { username, authCode } = formState;\n    try {\n      await Auth.confirmSignUp(username, authCode);\n      updateFormState(() => ({ ...formState, formType: \"signIn\" }));\n    } catch (err) {\n      console.error('[!] Error confirming sign up', err);\n    }\n  };\n\n  const signIn = async () => {\n    const { username, password } = formState;\n    try {\n      await Auth.signIn(username, password);\n      updateFormState(() => ({ ...formState, formType: \"signedIn\" }));\n    } catch (err) {\n      console.error('[!] Error signing in.', err);\n    }\n  };\n\n  // const confirmSignIn = async () => {};\n\n  const signOut = async () => {\n    Auth.signOut();\n    // updateFormState(() => ({ ...formState, formType: \"signedOut\" }));\n  };\n\n  /*************************\n   * Toggle Dialog Modal   *\n   *************************/\n  const toggleDialog = () => {\n    openDialog ? setOpenDialog(false) : setOpenDialog(true);\n  };\n\n  return (\n    <div className={'card-container'}>\n      <Dialog\n        maxWidth={\"md\"}\n        fullWidth={true}\n        open={openDialog}\n        title={\"Sign In\"}\n        customClass={'dialog'}\n        onCancel={toggleDialog}\n      >\n        {\n          formType === 'signUp' && (\n            <>\n              <DialogTitle>Sign Up</DialogTitle>\n              <DialogContent dividers={true}>\n                <form id={'signup-form'} onSubmit={signUp}>\n                  <Grid>\n                    <TextField\n                      fullWidth\n                      id={'username'}\n                      name={'username'}\n                      label={'Username'}\n                      autoComplete={'username'}\n                      onChange={onChange}\n                    />\n                  </Grid>\n                  <Grid>\n                    <TextField\n                      fullWidth\n                      id={'email'}\n                      name={'email'}\n                      label={'Email'}\n                      autoComplete={'email'}\n                      onChange={onChange}\n                    />\n                  </Grid>\n                  <Grid>\n                    <TextField\n                      fullWidth\n                      id={'password'}\n                      type={'password'}\n                      name={'password'}\n                      label={'Password'}\n                      autoComplete={'password'}\n                      onChange={onChange}\n                    />\n                  </Grid>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button color={'secondary'} variant={'contained'} onClick={toggleDialog}>Cancel</Button>\n                <Button\n                  type={'submit'}\n                  form={'signup-form'}\n                  variant={'contained'}\n                >\n                  Sign Up\n                </Button>\n                <Button onClick={() => updateFormState(() => ({\n                  ...formState, formType: \"signIn\"\n                }))}>Sign In</Button>\n              </DialogActions>\n            </>\n          )\n        }\n        {\n          formType === 'confirmSignUp' && (\n            <>\n              <DialogTitle>Confirm Sign Up</DialogTitle>\n              <DialogContent dividers={true}>\n                <form id={'confirm-signup-form'} onSubmit={confirmSignUp}>\n                  <Grid>\n                    <TextField\n                      fullWidth\n                      id={'authCode'}\n                      name={'authCode'}\n                      label={'Confirmation Code'}\n                      autoComplete={''}\n                      onChange={onChange}\n                    />\n                  </Grid>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button color={'secondary'} variant={'contained'} onClick={toggleDialog}>Cancel</Button>\n                <Button\n                  type={'submit'}\n                  form={'confirm-signup-form'}\n                  variant={'contained'}\n                >\n                  Confirm Sign Up\n                </Button>\n              </DialogActions>\n            </>\n          )\n        }\n        {\n          formType === 'signIn' && (\n            <>\n              <DialogTitle>Sign In</DialogTitle>\n              <DialogContent dividers={true}>\n                <form id={'signin-form'} onSubmit={signIn}>\n                  <Grid>\n                    <TextField\n                      fullWidth\n                      id={'username'}\n                      name={'username'}\n                      label={'Username'}\n                      autoComplete={'username'}\n                      onChange={onChange}\n                    />\n                  </Grid>\n                  <Grid>\n                    <TextField\n                      fullWidth\n                      id={'password'}\n                      type={'password'}\n                      name={'password'}\n                      label={'Password'}\n                      autoComplete={'password'}\n                      onChange={onChange}\n                    />\n                  </Grid>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button color={'secondary'} variant={'contained'} onClick={toggleDialog}>Cancel</Button>\n                <Button\n                  type={'submit'}\n                  form={'signin-form'}\n                  variant={'contained'}\n                >\n                  Sign In\n                </Button>\n              </DialogActions>\n            </>\n          )\n        }\n        {\n          formType === 'signedIn' && (\n            () => toggleDialog()\n          )\n        }\n      </Dialog>\n    </div>\n  );\n}","/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/FancyCheckout.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/Review.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/PaymentForm.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/components/checkout_components/AddressForm.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/components/product_components/NewProduct.js",["140"],"import React, { Component } from 'react';\nimport { UserContext } from '../../App';\nimport aws_exports from '../../aws-exports';\n//** Amplify & GraphQL Imports **//\nimport { Storage, Auth, API, graphqlOperation } from \"aws-amplify\";\nimport { PhotoPicker } from \"aws-amplify-react\";\nimport { createProduct, createPicture } from \"../../graphql/mutations\";\n//** MaterialUI Imports **//\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\n\nconst initialState = {\n  name: '',\n  store: '',\n  price: '',\n  owner: '',\n  image: '',\n  description: '',\n  imagePreview: '',\n  publicBucket: \"deliapp-image-bucket-public-access-tk01052021\",\n  delivery: false,\n  isUploading: false,\n  addProductDialog: false,\n  options: [],\n  selectedTags: [],\n  tags: [\n    \"Beverages\",\n    \"Entree\",\n    \"Snacks\",\n    \"Sides\",\n    \"Salads\",\n    \"Vegan\"\n  ]\n};\n\nclass NewProduct extends Component {\n  state = { ...initialState };\n\n  addImageToDB = async (name, owner, img, key) => {\n    console.log('[+] Add image to DB.');\n    try {\n      const photo = {\n        name: name,\n        owner: owner,\n        public_url: `https://${this.state.publicBucket}.s3.amazonaws.com/public/${key}`,\n        file: img\n      };\n      await API.graphql(graphqlOperation(createPicture, { input: photo }));\n      console.log('[+] Add image success!')\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  makePublicCopyImage = async (name, photo) => {\n    return await Storage.put(name, photo.file, {\n      contentType: photo.type,\n      level: 'public',\n      bucket: \"deliapp-image-bucket-public-access-tk01052021\",\n      progressCallback: progress => {\n        console.log(`Uploaded: ${progress.loaded}/${progress.total}`);\n      }\n    });\n  };\n\n  handleAddProduct = async () => {\n    try {\n      this.setState({ isUploading: true });\n      const visibility = 'public';\n      const { identityId } = await Auth.currentCredentials();\n      const { username } = await Auth.currentUserInfo();\n      const filename = `/${visibility}/${identityId}/${Date.now()}-${this.state.image.name}`;\n      const uploadedFile = await Storage.put(filename, this.state.image.file, {\n        contentType: this.state.image.type,\n        progressCallback: progress => {\n          console.log(`Uploaded: ${progress.loaded}/${progress.total}`);\n          const percentUploaded = Math.round((progress.loaded / progress.total) * 100);\n          this.setState({ percentUploaded });\n        }\n      });\n      console.log(uploadedFile);\n\n      // this creates a publicly accessible copy of the image file in a separate S3 bucket\n      const uploadedPublicFile = await this.makePublicCopyImage(filename, this.state.image);\n      console.log(uploadedPublicFile);\n\n      // TODO: Where is the best place to insert the \"addImageToDB()\" function call?...after the \"file\" var declaration?\n      // THIS IS WHERE REF CODE EXEC CMD: to add image to DynamoDB (*addImageToDB(...))\n\n      const file = {\n        key: uploadedFile.key,\n        bucket: aws_exports.aws_user_files_s3_bucket,\n        region: aws_exports.aws_user_files_s3_bucket_region\n      };\n\n      await this.addImageToDB(filename, username, file, file.key);\n\n      const input = {\n        owner: username,\n        name: this.state.name,\n        description: this.state.description,\n        price: this.state.price,\n        delivery: this.state.delivery,\n        tags: this.state.selectedTags,\n        file\n      };\n\n      const result = await API.graphql(graphqlOperation(createProduct, { input }));\n      console.log(result);\n      console.info(`Created product id: ${result.data.createProduct.id}`);\n      this.setState({ ...initialState });\n      setTimeout(() => window.location.reload(), 2000);\n    } catch (err) {\n      console.error('[!] Error adding new product', err);\n    }\n  };\n\n  handleClickOpen = async () => {\n    this.setState({ addProductDialog: true });\n  };\n\n  handleClose = () => {\n    this.setState({ addProductDialog: false });\n    this.setState({ name: '', description: '', price: null, delivery: false, imagePreview: '', selectedTags: [] });\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n    const targetName = event.target.name;\n    const targetValue = event.target.value;\n    this.setState({\n      ...targetName,\n      [targetName]: targetValue\n    });\n  };\n\n  handleFilterTags = query => {\n    const options = this.state.tags\n      .map(tag => ({ value: tag, label: tag }))\n      .filter(tag => tag.label.toLowerCase().includes(query.toLowerCase()));\n    this.setState({ options });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      name,\n      tags,\n      price,\n      delivery,\n      description,\n      isUploading,\n      selectedTags,\n      imagePreview,\n      addProductDialog\n    } = this.state;\n\n    return (\n      <UserContext.Consumer>\n        {({ user }) =>\n          <>\n            <Grid\n              container\n              spacing={3}\n              direction={'row'}\n              justify={'center'}\n              alignItems={'center'}\n              alignContent={'center'}\n            >\n              <Grid item xs={12}>\n                <Paper style={{ height: '16em' }}>\n                  <Button variant={'outlined'} color={'primary'} onClick={this.handleClickOpen} style={{ margin: '40px' }}>\n                    Add New Menu Item\n                  </Button>\n                </Paper>\n              </Grid>\n            </Grid>\n\n            <Dialog\n              fullWidth\n              maxWidth={'sm'}\n              open={addProductDialog}\n              onClose={this.handleClose}\n              aria-labelledby={'form-dailog.title'}\n            >\n              <DialogTitle id={'form-dialog-title'}>New Product</DialogTitle>\n              <DialogContent className={classes.root}>\n                {/* Product Name Field */}\n                <TextField\n                  required\n                  autoFocus\n                  fullWidth\n                  id={'name'}\n                  value={name}\n                  name={'name'}\n                  label={'Name'}\n                  margin={'normal'}\n                  variant={'filled'}\n                  style={{ margin: 8 }}\n                  placeholder={'Product Name'}\n                  onChange={this.handleChange}\n                  InputLabelProps={{ shrink: true }}\n                />\n\n                {/* Product Description Field */}\n                <TextField\n                  required\n                  fullWidth\n                  multiline={true}\n                  id={'description'}\n                  value={description}\n                  name={'description'}\n                  label={'Description'}\n                  margin={'normal'}\n                  variant={'filled'}\n                  style={{ margin: 8 }}\n                  placeholder={'Product Description'}\n                  onChange={this.handleChange}\n                  InputLabelProps={{ shrink: true }}\n                />\n\n                {/* Product Price Field */}\n                <TextField\n                  required\n                  fullWidth\n                  id={'price'}\n                  value={price}\n                  name={'price'}\n                  label={'Price'}\n                  margin={'normal'}\n                  variant={'filled'}\n                  style={{ margin: 8 }}\n                  placeholder={'Product Price'}\n                  onChange={this.handleChange}\n                  InputLabelProps={{ shrink: true }}\n                />\n\n                {/* Image Pick & Upload */}\n                <Box>\n                  {imagePreview && (\n                    <img\n                      src={imagePreview}\n                      alt={'Product Preview'}\n                      className={'image-preview'}\n                    />\n                  )}\n                  <PhotoPicker\n                    preview={'hidden'}\n                    title={'Product Image'}\n                    onPick={file => this.setState({ image: file })}\n                    onLoad={photoUrl => this.setState({ imagePreview: photoUrl })}\n                    theme={{\n                      formContainer: {\n                      margin: 0,\n                      padding: \"0.8em\"\n                      },\n                      sectionBody: {\n                        margin: 0,\n                        width: \"250px\"\n                      },\n                      formSection: {\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\"\n                      },\n                      sectionHeader: {\n                        padding: \"0.2em\",\n                        color: \"var(--darkAmazonOrange)\"\n                      },\n                      amplifyButton: {\n                        display: \"none\"\n                      }\n                    }}\n                  />\n                </Box>\n\n                <FormControl className={classes.formControl}>\n                  <InputLabel id={'category-tags'}>Tags</InputLabel>\n                  <Select\n                    multiple\n                    id={'addTags'}\n                    labelId={'addTags'}\n                    value={selectedTags}\n                    name={'selectedTags'}\n                    onChange={this.handleChange}\n                  >\n                    <MenuItem value={''} />\n                    {tags.map(tag => (\n                      <MenuItem key={tag} value={tag}>{tag}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n              </DialogContent>\n              <DialogActions>\n                <Button color={'secondary'} onClick={this.handleClose}>Cancel</Button>\n                <Button\n                  color={'primary'}\n                  onClick={this.handleAddProduct}\n                  disabled={!name || !description || isUploading}\n                >\n                  {isUploading ? \"Uploading...\" : \"Add Product\"}\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </>\n        }\n      </UserContext.Consumer>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '25ch',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nexport default withStyles(styles)(NewProduct);","/home/robot/Git/Projects/Deli_App/deli-app/src/graphql/mutations.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/components/product_components/ProductList.js",["141","142","143","144","145","146","147","148","149","150","151"],"import React,{useState} from 'react';\nimport { Link } from \"react-router-dom\";\nimport { graphqlOperation } from \"aws-amplify\";\nimport { Connect } from \"aws-amplify-react\";\nimport { S3Image } from \"aws-amplify-react\";\nimport { AmplifyS3Image } from \"@aws-amplify/ui-react\";\nimport Card from '@material-ui/core/Card';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Chip from '@material-ui/core/Chip';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport Grid from '@material-ui/core/Grid';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport { Loading } from \"element-react\";\nimport Error from \"../Error\";\nimport Product from \"./Product\";\n\nconst listProducts = /* GraphQL */ `\n  query ListProducts(\n    $filter: ModelProductFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listProducts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        description\n        store {\n          id\n          name\n          tags\n          owner\n          createdAt\n          updatedAt\n        }\n        file {\n          bucket\n          region\n          key\n        }\n        price\n        delivery\n        tags\n        owner\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n\nconst ProductList = ({ searchResults }) => {\n  const [link, setLink] = useState(\"\");\n\n  return (\n    <Connect query={graphqlOperation(listProducts)}>\n      {/* The below values are interpolated from the above \"Connect\" API query */}\n      {/* \"errors\" - is returned as an array */}\n      {({ data, loading, errors }) => {\n        if (errors.length > 0) return <Error errors={errors} />;\n        if (loading || !data.listProducts) return <Loading fullscreen={true} />;\n        const products = searchResults.length > 0 ? searchResults : data.listProducts.items;\n\n        return (\n          <>\n            <Grid container spacing={3} justify={\"center\"}>\n\n              {products.map(product => (\n                <Grid item xs={12} sm={6} md={4} lg={3}>\n                  {console.log(product)}\n                  <Product key={product.id} product={product} />\n                </Grid>\n              ))}\n\n            </Grid>\n          </>\n        );\n      }}\n    </Connect>\n  );\n};\n\nexport default ProductList;","/home/robot/Git/Projects/Deli_App/deli-app/src/components/Error.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/components/product_components/Product.js",["152","153","154","155","156","157","158","159","160","161","162","163","164"],"/home/robot/Git/Projects/Deli_App/deli-app/src/config/index.js",["165","166"],"const dotenv = require('dotenv').config();\n\n// config() will read your .env file, parse the contents, assign it to process.env\n// const envFound = dotenv.config();\n\n// if (envFound.error) {\n//   console.log(envFound.error);\n//   // This error should crash whole process\n//   console.error(envFound.error);\n//   throw new Error(\"⚠️  Couldn't find .env file  ⚠️\");\n// }\n\nexport default {\n  awsConfig: {\n    /**\n     * AWS Region\n     */\n    region: process.env.REACT_APP_REGION,\n\n    /**\n     * AWS Administrator Email\n     */\n    adminEmail: process.env.REACT_APP_ADMIN_EMAIL,\n\n    /**\n     * AWS Access Key ID\n     */\n    accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\n\n    /**\n     * AWS Secret Access Key\n     */\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_KEY\n  },\n  stripeConfig: {\n    /**\n     * Stripe Publishable Key (dev credentials)\n     */\n    pubKey: process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY,\n  }\n}","/home/robot/Git/Projects/Deli_App/deli-app/src/graphql/queries.js",[],"/home/robot/Git/Projects/Deli_App/deli-app/src/components/Checkout.js",["167","168","169","170","171","172","173","174","175","176","177","178","179"],"/home/robot/Git/Projects/Deli_App/deli-app/src/utils/emailHandler.js",["180"],"import React from \"react\";\n\nexport const emailHandler = async chargeObj => {};\n\nexport default emailHandler;",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":4,"column":9,"nodeType":"187","messageId":"188","endLine":4,"endColumn":12},{"ruleId":"185","severity":1,"message":"189","line":4,"column":20,"nodeType":"187","messageId":"188","endLine":4,"endColumn":36},{"ruleId":"185","severity":1,"message":"190","line":7,"column":39,"nodeType":"187","messageId":"188","endLine":7,"endColumn":56},{"ruleId":"185","severity":1,"message":"191","line":10,"column":10,"nodeType":"187","messageId":"188","endLine":10,"endColumn":19},{"ruleId":"185","severity":1,"message":"192","line":11,"column":25,"nodeType":"187","messageId":"188","endLine":11,"endColumn":35},{"ruleId":"185","severity":1,"message":"193","line":23,"column":8,"nodeType":"187","messageId":"188","endLine":23,"endColumn":16},{"ruleId":"185","severity":1,"message":"194","line":27,"column":10,"nodeType":"187","messageId":"188","endLine":27,"endColumn":22},{"ruleId":"185","severity":1,"message":"195","line":27,"column":24,"nodeType":"187","messageId":"188","endLine":27,"endColumn":37},{"ruleId":"185","severity":1,"message":"196","line":27,"column":39,"nodeType":"187","messageId":"188","endLine":27,"endColumn":54},{"ruleId":"185","severity":1,"message":"197","line":228,"column":7,"nodeType":"187","messageId":"188","endLine":228,"endColumn":19},{"ruleId":"185","severity":1,"message":"198","line":234,"column":7,"nodeType":"187","messageId":"188","endLine":234,"endColumn":20},{"ruleId":"185","severity":1,"message":"199","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":18},{"ruleId":"185","severity":1,"message":"200","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":19},{"ruleId":"185","severity":1,"message":"201","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":20},{"ruleId":"185","severity":1,"message":"202","line":9,"column":8,"nodeType":"187","messageId":"188","endLine":9,"endColumn":17},{"ruleId":"185","severity":1,"message":"194","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":22},{"ruleId":"185","severity":1,"message":"195","line":9,"column":24,"nodeType":"187","messageId":"188","endLine":9,"endColumn":37},{"ruleId":"185","severity":1,"message":"203","line":13,"column":9,"nodeType":"187","messageId":"188","endLine":13,"endColumn":13},{"ruleId":"185","severity":1,"message":"193","line":14,"column":8,"nodeType":"187","messageId":"188","endLine":14,"endColumn":16},{"ruleId":"185","severity":1,"message":"204","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":13},{"ruleId":"185","severity":1,"message":"205","line":36,"column":11,"nodeType":"187","messageId":"188","endLine":36,"endColumn":15},{"ruleId":"185","severity":1,"message":"205","line":47,"column":11,"nodeType":"187","messageId":"188","endLine":47,"endColumn":15},{"ruleId":"185","severity":1,"message":"206","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":12},{"ruleId":"185","severity":1,"message":"207","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":24},{"ruleId":"185","severity":1,"message":"208","line":5,"column":26,"nodeType":"187","messageId":"188","endLine":5,"endColumn":36},{"ruleId":"185","severity":1,"message":"192","line":5,"column":38,"nodeType":"187","messageId":"188","endLine":5,"endColumn":48},{"ruleId":"185","severity":1,"message":"209","line":5,"column":50,"nodeType":"187","messageId":"188","endLine":5,"endColumn":63},{"ruleId":"185","severity":1,"message":"205","line":21,"column":10,"nodeType":"187","messageId":"188","endLine":21,"endColumn":14},{"ruleId":"185","severity":1,"message":"210","line":99,"column":9,"nodeType":"187","messageId":"188","endLine":99,"endColumn":16},{"ruleId":"185","severity":1,"message":"211","line":162,"column":7,"nodeType":"187","messageId":"188","endLine":162,"endColumn":15},{"ruleId":"185","severity":1,"message":"212","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"213","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":17},{"ruleId":"185","severity":1,"message":"214","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":24},{"ruleId":"185","severity":1,"message":"215","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":12},{"ruleId":"185","severity":1,"message":"216","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":17},{"ruleId":"185","severity":1,"message":"217","line":9,"column":8,"nodeType":"187","messageId":"188","endLine":9,"endColumn":12},{"ruleId":"185","severity":1,"message":"218","line":10,"column":8,"nodeType":"187","messageId":"188","endLine":10,"endColumn":23},{"ruleId":"185","severity":1,"message":"219","line":12,"column":8,"nodeType":"187","messageId":"188","endLine":12,"endColumn":22},{"ruleId":"185","severity":1,"message":"220","line":13,"column":8,"nodeType":"187","messageId":"188","endLine":13,"endColumn":24},{"ruleId":"185","severity":1,"message":"221","line":55,"column":10,"nodeType":"187","messageId":"188","endLine":55,"endColumn":14},{"ruleId":"185","severity":1,"message":"222","line":55,"column":16,"nodeType":"187","messageId":"188","endLine":55,"endColumn":23},{"ruleId":"185","severity":1,"message":"223","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"185","severity":1,"message":"212","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"185","severity":1,"message":"213","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":17},{"ruleId":"185","severity":1,"message":"224","line":28,"column":8,"nodeType":"187","messageId":"188","endLine":28,"endColumn":24},{"ruleId":"185","severity":1,"message":"225","line":40,"column":8,"nodeType":"187","messageId":"188","endLine":40,"endColumn":25},{"ruleId":"185","severity":1,"message":"226","line":150,"column":10,"nodeType":"187","messageId":"188","endLine":150,"endColumn":13},{"ruleId":"185","severity":1,"message":"227","line":150,"column":15,"nodeType":"187","messageId":"188","endLine":150,"endColumn":21},{"ruleId":"185","severity":1,"message":"228","line":153,"column":24,"nodeType":"187","messageId":"188","endLine":153,"endColumn":39},{"ruleId":"185","severity":1,"message":"229","line":161,"column":10,"nodeType":"187","messageId":"188","endLine":161,"endColumn":22},{"ruleId":"185","severity":1,"message":"230","line":164,"column":17,"nodeType":"187","messageId":"188","endLine":164,"endColumn":25},{"ruleId":"185","severity":1,"message":"231","line":216,"column":9,"nodeType":"187","messageId":"188","endLine":216,"endColumn":20},{"ruleId":"185","severity":1,"message":"232","line":240,"column":9,"nodeType":"187","messageId":"188","endLine":240,"endColumn":23},{"ruleId":"185","severity":1,"message":"233","line":248,"column":15,"nodeType":"187","messageId":"188","endLine":248,"endColumn":30},{"ruleId":"185","severity":1,"message":"234","line":1,"column":7,"nodeType":"187","messageId":"188","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":13,"column":1,"nodeType":"237","endLine":41,"endColumn":2},{"ruleId":"185","severity":1,"message":"208","line":6,"column":3,"nodeType":"187","messageId":"188","endLine":6,"endColumn":13},{"ruleId":"185","severity":1,"message":"192","line":7,"column":3,"nodeType":"187","messageId":"188","endLine":7,"endColumn":13},{"ruleId":"185","severity":1,"message":"238","line":14,"column":3,"nodeType":"187","messageId":"188","endLine":14,"endColumn":9},{"ruleId":"185","severity":1,"message":"239","line":18,"column":8,"nodeType":"187","messageId":"188","endLine":18,"endColumn":30},{"ruleId":"185","severity":1,"message":"240","line":26,"column":3,"nodeType":"187","messageId":"188","endLine":26,"endColumn":10},{"ruleId":"185","severity":1,"message":"241","line":29,"column":3,"nodeType":"187","messageId":"188","endLine":29,"endColumn":14},{"ruleId":"185","severity":1,"message":"225","line":32,"column":3,"nodeType":"187","messageId":"188","endLine":32,"endColumn":20},{"ruleId":"185","severity":1,"message":"242","line":38,"column":3,"nodeType":"187","messageId":"188","endLine":38,"endColumn":11},{"ruleId":"185","severity":1,"message":"243","line":64,"column":7,"nodeType":"187","messageId":"188","endLine":64,"endColumn":10},{"ruleId":"185","severity":1,"message":"244","line":67,"column":10,"nodeType":"187","messageId":"188","endLine":67,"endColumn":15},{"ruleId":"185","severity":1,"message":"245","line":79,"column":20,"nodeType":"187","messageId":"188","endLine":79,"endColumn":31},{"ruleId":"185","severity":1,"message":"246","line":182,"column":9,"nodeType":"187","messageId":"188","endLine":182,"endColumn":24},{"ruleId":"185","severity":1,"message":"247","line":216,"column":19,"nodeType":"187","messageId":"188","endLine":216,"endColumn":24},{"ruleId":"185","severity":1,"message":"204","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":13},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'graphqlOperation' is defined but never used.","'withAuthenticator' is defined but never used.","'withTheme' is defined but never used.","'makeStyles' is defined but never used.","'FormCard' is defined but never used.","'handleSignIn' is defined but never used.","'handleSignOut' is defined but never used.","'stringToBoolean' is defined but never used.","'merriweather' is assigned a value but never used.","'libreFranklin' is assigned a value but never used.","'GitHubIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'TextField' is defined but never used.","'Auth' is defined but never used.","'React' is defined but never used.","'user' is assigned a value but never used.","'clsx' is defined but never used.","'createMuiTheme' is defined but never used.","'withStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'signOut' is assigned a value but never used.","'delivery' is assigned a value but never used.","'Link' is defined but never used.","'S3Image' is defined but never used.","'AmplifyS3Image' is defined but never used.","'Card' is defined but never used.","'CheckIcon' is defined but never used.","'Chip' is defined but never used.","'DescriptionIcon' is defined but never used.","'LocalOfferIcon' is defined but never used.","'LibraryBooksIcon' is defined but never used.","'link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'useEffect' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'DialogContentText' is defined but never used.","'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'setPublicBucket' is assigned a value but never used.","'deleteDialog' is assigned a value but never used.","'setItems' is assigned a value but never used.","'formatImage' is assigned a value but never used.","'handleCheckout' is assigned a value but never used.","'isEmailVerified' is assigned a value but never used.","'dotenv' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'purple' is defined but never used.","'AttachMoneyRoundedIcon' is defined but never used.","'Divider' is defined but never used.","'FormControl' is defined but never used.","'Elements' is defined but never used.","'ses' is assigned a value but never used.","'error' is assigned a value but never used.","'setShipping' is assigned a value but never used.","'shippingAddress' is assigned a value but never used.","'order' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]